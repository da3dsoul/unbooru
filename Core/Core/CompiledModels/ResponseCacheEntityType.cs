// <auto-generated />
using System;
using System.Net;
using System.Reflection;
using ImageInfrastructure.Abstractions.Poco;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace ImageInfrastructure.Core.CompiledModels
{
    partial class ResponseCacheEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "ImageInfrastructure.Abstractions.Poco.ResponseCache",
                typeof(ResponseCache),
                baseEntityType);

            var responseCacheId = runtimeEntityType.AddProperty(
                "ResponseCacheId",
                typeof(int),
                propertyInfo: typeof(ResponseCache).GetProperty("ResponseCacheId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ResponseCache).GetField("<ResponseCacheId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw);

            var lastUpdated = runtimeEntityType.AddProperty(
                "LastUpdated",
                typeof(DateTime),
                propertyInfo: typeof(ResponseCache).GetProperty("LastUpdated", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ResponseCache).GetField("<LastUpdated>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var response = runtimeEntityType.AddProperty(
                "Response",
                typeof(string),
                propertyInfo: typeof(ResponseCache).GetProperty("Response", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ResponseCache).GetField("<Response>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);

            var statusCode = runtimeEntityType.AddProperty(
                "StatusCode",
                typeof(HttpStatusCode?),
                propertyInfo: typeof(ResponseCache).GetProperty("StatusCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ResponseCache).GetField("<StatusCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);

            var uri = runtimeEntityType.AddProperty(
                "Uri",
                typeof(string),
                propertyInfo: typeof(ResponseCache).GetProperty("Uri", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ResponseCache).GetField("<Uri>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);

            var key = runtimeEntityType.AddKey(
                new[] { responseCacheId });
            runtimeEntityType.SetPrimaryKey(key);

            var index = runtimeEntityType.AddIndex(
                new[] { uri },
                unique: true);

            var index0 = runtimeEntityType.AddIndex(
                new[] { lastUpdated, statusCode });

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "ResponseCaches");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
